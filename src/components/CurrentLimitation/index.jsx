import React from "react";
import './index.css'
import {useNavigate} from "react-router-dom";

const ServicePackage = ({ isOpen, setIsOpen, limitation }) => {
    const navigate = useNavigate();

    if (!limitation) return null;

    return (
        <>
            {isOpen && (
                <div className="overlay">
                    <div className="card">
                        <h2 className="card-title">G√≥i gi·ªõi h·∫°n c·ªßa b·∫°n</h2>
                        <p className="highlight-text-head">
                            <strong>{limitation.limitationCode} - {limitation.limitationName}</strong>
                        </p>

                        <ul className="card-list">
                            <li>
                                <span className="icon">üìö</span>
                                <strong>S·ªë l·ªõp h·ªçc t·ªëi ƒëa:&nbsp;</strong> {limitation.createClass} -&nbsp;
                                <span className="highlight-text">ƒê√£ t·∫°o: {limitation.createdClass} l·∫ßn</span>
                            </li>
                            <li>
                                <span className="icon">üìù</span>
                                <strong>S·ªë b√†i thi t·ªëi ƒëa:&nbsp;</strong> {limitation.createExam} -&nbsp;
                                <span className="highlight-text">ƒê√£ t·∫°o: {limitation.createdExam} l·∫ßn</span>
                            </li>
                            <li>
                                <span className="icon">üë•</span>
                                <strong>S·ªë th√†nh vi√™n t·ªëi ƒëa / l·ªõp:&nbsp;</strong> {limitation.maxMemberPerClass} th√†nh
                                vi√™n
                            </li>
                            <li>
                                <span className="icon">‚è≥</span>
                                <strong>Ng√†y h·∫øt h·∫°n:&nbsp;</strong>
                                {limitation.expirationDate
                                    ? new Date(limitation.expirationDate).toLocaleDateString("vi-VN")
                                    : "V√¥ h·∫°n"}
                            </li>
                            <li>
                                <span className="icon">üí∞</span>
                                <strong>Gi√° g√≥i:&nbsp;</strong> {limitation.price.toLocaleString()} VNƒê -
                                <span
                                    className="highlight-text"> &nbsp;S·ªë th√°ng ƒë√£ mua:&nbsp;{limitation.price > 0 ? limitation.totalPrice / limitation.price : "V√¥ h·∫°n"}</span>
                            </li>
                            <li>
                                <span className="icon">üí∏</span>
                                <strong>T·ªïng ti·ªÅn:&nbsp;</strong> {limitation.totalPrice.toLocaleString()} VNƒê
                            </li>
                        </ul>
                        <div className="button-container">
                            <button className="close-btn" onClick={() => setIsOpen(false)}>
                                ƒê√≥ng
                            </button>
                            <button className="upgrade-btn" onClick={() => {
                                navigate("/limitations")
                                setIsOpen(false)
                            }}>
                                N√¢ng c·∫•p
                            </button>
                        </div>
                    </div>
                </div>
            )}
        </>
    );
};

export default ServicePackage;
