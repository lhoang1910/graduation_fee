import React, { useEffect, useState } from "react";
import { FaChalkboardTeacher, FaClipboardList, FaUsers, FaMoneyBillWave } from "react-icons/fa";
import {callListLimitation} from "../../services/api.js";
import './index.css'
import {RiVipCrownLine} from "react-icons/ri"
import BuyLimitationModal from "./Buy/index.jsx";

const LimitationList = () => {
    const [limitations, setLimitations] = useState([]);
    const [searchingKeys, setSearchingKeys] = useState("");
    const [startPrice, setStartPrice] = useState("");
    const [endPrice, setEndPrice] = useState("");
    const [isBuyModalOpen, setIsBuyModalOpen] = useState(false);
    const [selectedLimitation, setSelectedLimitation] = useState(null)

    const fetchData = async () => {
        try {
            const res = await callListLimitation(0, 10, searchingKeys, startPrice, endPrice);
            setLimitations(res?.data?.content || []);
        } catch (error) {
            console.error("Error fetching data:", error);
        }
    };

    useEffect(() => {
        fetchData();
    }, []);

    const handleBuyClick = (limitation) => {
        setSelectedLimitation(limitation);
        setIsBuyModalOpen(true);
    };

    return (
        <div className="container">
            <h2 className="title">
                <RiVipCrownLine className="title-icon" /> C√°c g√≥i gi·ªõi h·∫°n
            </h2>
            <div className="filters">
                <input
                    type="text"
                    placeholder="üîç T√¨m ki·∫øm..."
                    value={searchingKeys}
                    onChange={(e) => setSearchingKeys(e.target.value)}
                />
                <input
                    type="number"
                    placeholder="üí∞ Gi√° t·ªëi thi·ªÉu"
                    value={startPrice}
                    onChange={(e) => setStartPrice(e.target.value)}
                />
                <input
                    type="number"
                    placeholder="üí∞ Gi√° t·ªëi ƒëa"
                    value={endPrice}
                    onChange={(e) => setEndPrice(e.target.value)}
                />
                <button onClick={fetchData}>L·ªçc</button>
            </div>
            <div className="list">
                {limitations.map((item) => (
                    <div className="card" key={item.id}>
                        <img src="src/assets/premium.jpg" alt="G√≥i gi·ªõi h·∫°n" className="card-image" />
                        <h3>{item.limitationName} - {item.limitationCode}</h3>
                        <p><FaChalkboardTeacher /> S·ªë l·∫ßn t·∫°o l·ªõp t·ªëi ƒëa: {item.createClass} l·∫ßn</p>
                        <p><FaClipboardList /> S·ªë l·∫ßn t·∫°o ƒë·ªÅ thi t·ªëi ƒëa: {item.createExam} l·∫ßn</p>
                        <p><FaUsers /> S·ªë th√†nh vi√™n t·ªëi ƒëa / 1 l·ªõp: {item.maxMemberPerClass} th√†nh vi√™n</p>
                        <p><FaMoneyBillWave /> Gi√°: {item.price.toLocaleString()} VND / th√°ng</p>
                        <button className="buy-button" onClick={() => handleBuyClick(item)}>Mua ngay</button>
                    </div>
                ))}
                {isBuyModalOpen && (
                    <BuyLimitationModal
                        limitation={selectedLimitation}
                        isOpen={isBuyModalOpen}
                        setIsOpen={setIsBuyModalOpen}
                    />
                )}
            </div>
        </div>
    );
};

export default LimitationList;